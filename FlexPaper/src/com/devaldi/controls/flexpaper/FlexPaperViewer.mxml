<?xml version="1.0" encoding="utf-8"?>
<!--
Copyright 2009 Erik EngstrÃ¶m

This file is part of FlexPaper.

FlexPaper is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, version 3 of the License.

FlexPaper is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with FlexPaper.  If not, see <http://www.gnu.org/licenses/>.	
-->
<fp:FlexPaperViewer_Base xmlns:mx="http://www.adobe.com/2006/mxml" addedToStage="bindStageEvents(event)" xmlns:fp="com.devaldi.controls.flexpaper.*" xmlns:ct="com.devaldi.controls.*" xmlns:st="com.devaldi.skinning.*">
	<mx:Metadata>
		[ResourceBundle("FlexPaper")]
		[Event(name="onDocumentLoaded", type="com.devaldi.events.DocumentLoadedEvent")]
		[Event(name="onLoadingProgress", type="flash.events.ProgressEvent")]
		[Event(name="onDocumentLoadedError", type="flash.events.ErrorEvent")]
		[Event(name="onCurrPageChanged", type="com.devaldi.events.CurrentPageChangedEvent")]
		[Event(name="onDocumentLoading", type="flash.events.Event")]
		[Event(name="onExternalLinkClicked", type="com.devaldi.events.ExternalLinkClickedEvent")]
		[Event(name="onDocumentPrinted", type="com.devaldi.events.DocumentPrintedEvent")]
	</mx:Metadata>
	<mx:Script>
		<![CDATA[
			import com.devaldi.controls.flexpaper.Viewer;
			import com.devaldi.controls.flexpaper.utils.MacMouseWheelHandler;
			import com.devaldi.events.CurrentPageChangedEvent;
			import com.devaldi.events.CursorModeChangedEvent;
			import com.devaldi.events.DocumentLoadedEvent;
			import com.devaldi.events.ExternalLinkClickedEvent;
			import com.devaldi.events.FitModeChangedEvent;
			import com.devaldi.events.ScaleChangedEvent;
			import com.devaldi.events.ViewModeChangedEvent;
			
			import flash.display.StageDisplayState;
			import flash.net.navigateToURL;
			
			import mx.controls.Alert;
			import mx.controls.sliderClasses.Slider;
			import mx.events.SliderEvent;
			import mx.managers.PopUpManager;
			
			private var _sliderUserChange:Boolean = false;
			
			public override function get viewer():com.devaldi.controls.flexpaper.Viewer{
				return paper1;
			}
			
			private function bindStageEvents(e:Event):void{
				stage.removeEventListener(FullScreenEvent.FULL_SCREEN, fullScreenRedraw);
				stage.addEventListener(FullScreenEvent.FULL_SCREEN, fullScreenRedraw);
			}
			
			private function fullScreenRedraw(event:FullScreenEvent):void{
				txtSearch.enabled = !TrueFullScreenActive; 
			}
			
			private function onNoMoreSearchResultsHandler(event:Event):void{
				Alert.show(resourceManager.getString("FlexPaper", "Finishedsearching"),resourceManager.getString("FlexPaper", "Searchfinished"),mx.controls.Alert.OK,this);
			}
			
			protected override function documentLoadedHandler(event:Event):void{
				spin1.visible = false;
				lblProgress.visible = false;
				spin1.stop();
				bttnInfo.visible = true;
				
				if(StartAtPage!=1&&!isNaN(StartAtPage)){paper1.gotoPage(StartAtPage);}
				super.documentLoadedHandler(event);
			}
			
			private function logoClickedEventHandler(event:Event):void{
				showInfo(event);			
			}
			
			protected override function papersLoadingHandler(event:Event):void{
				spin1.start();
				spin1.visible = true;
				super.papersLoadingHandler(event);
			}
						
			private function sliderChange(event:SliderEvent):void 
			{
				if(!paper1.BusyLoading && _sliderUserChange)
				{
					paper1.Zoom(Slider(event.currentTarget).value);
				}
				
				_sliderUserChange = true;
			}		
			
			private function txtPctKeyDown(event:KeyboardEvent):void{
				if(event.keyCode == Keyboard.ENTER && txtPct.text.length>1 && !isNaN(Number(txtPct.text.replace("%","")))){
					paper1.Zoom(new Number(txtPct.text.replace("%",""))/100);
				}
			}
			
			private function txtSearchKeyDown(event:KeyboardEvent):void{
				if(event!=null && event.keyCode == Keyboard.ENTER && txtSearch.text.length>0){
					paper1.searchText(txtSearch.text);
				}
			}
			
			private function txtPageNumKeyDown(event:KeyboardEvent):void{
				if(event.keyCode == Keyboard.ENTER && txtPage.text.length>0 && !isNaN(Number(txtPage.text))){
					paper1.gotoPage(new Number(txtPage.text));
				}
			}
			
			protected override function onDocumentLoadingProgressHandler(event:ProgressEvent):void{
				lblProgress.text = String(Math.round(event.bytesLoaded/event.bytesTotal*100));
				super.onDocumentLoadingProgressHandler(event);
			}
			
			private function onScaleChanged(event:Event):void{
				txtPct.text = formatPct(paper1.Scale);
				_sliderUserChange = false;
				slidPctScale.value = Number(paper1.Scale);
			}
						
			public override function loadSwf(s:String):void{
				bttnInfo.visible = false;
				spin1.visible = true;
				lblProgress.text = "";
				lblProgress.visible = true;
				super.loadSwf(s);
			}
		]]>
	</mx:Script>
	<mx:Style source="styles/default.css" />
	<mx:HBox styleName="toolbarBackground" width="100%" height="26" borderStyle="solid" verticalScrollPolicy="off" horizontalScrollPolicy="off" paddingTop="2" paddingLeft="2" horizontalGap="3">
		<st:GradientImageButton icon="@Embed('/../assets/print-icon.gif')" styleName="toolbttn" width="20" click="printPaper(event)" toolTip="@Resource(key='Print', bundle='FlexPaper')" visible="{!ReadOnly}" includeInLayout="{!ReadOnly}" />
		<mx:Image source="@Embed('/../assets/bar.gif')" width="3" height="21" visible="{!ReadOnly}" includeInLayout="{!ReadOnly}"  />
		
		<st:GradientImageButton icon="@Embed('/../assets/singlepage.gif')" styleName="toolbttn" width="20" click="paper1.switchMode('Portrait');" toolTip="@Resource(key='SinglePage', bundle='FlexPaper')" selected="{paper1.ViewMode == ViewModeEnum.PORTRAIT}" tabIndex="2" />
		<st:GradientImageButton icon="@Embed('/../assets/twopage.gif')" styleName="toolbttn" width="20" click="paper1.switchMode('TwoPage');" toolTip="@Resource(key='TwoPage', bundle='FlexPaper')" selected="{paper1.ViewMode == ViewModeEnum.TWOPAGE}"  tabIndex="3" />
		<st:GradientImageButton icon="@Embed('/../assets/thumbs.gif')" styleName="toolbttn" width="20" click="paper1.switchMode('Tile');" toolTip="@Resource(key='ThumbView', bundle='FlexPaper')" selected="{paper1.ViewMode == ViewModeEnum.TILE}" tabIndex="4" />
		<st:GradientImageButton id="bttnFitWidth" icon="@Embed('/../assets/fit.gif')" styleName="toolbttn" width="20" selected="{paper1.FitMode == FitModeEnum.FITWIDTH}" toggle="true" click="paper1.fitWidth();bttnFitHeight.selected=false;" enabled="{paper1.ViewMode == ViewModeEnum.PORTRAIT}" toolTip="@Resource(key='FitWidth', bundle='FlexPaper')"  tabIndex="5" />
		<st:GradientImageButton id="bttnFitHeight" icon="@Embed('/../assets/pagefit.gif')" styleName="toolbttn" width="20"  click="paper1.fitHeight();bttnFitWidth.selected=false;" selected="{paper1.FitMode == FitModeEnum.FITHEIGHT}" toggle="true" enabled="{paper1.ViewMode == ViewModeEnum.PORTRAIT}" toolTip="@Resource(key='FitPage', bundle='FlexPaper')"  tabIndex="6" />
		<mx:Image source="@Embed('/../assets/bar.gif')" width="3" height="21" />
		
		<st:GradientHSlider id="slidPctScale" maximum="5" mouseDown="_sliderUserChange=true" change="sliderChange(event)"  styleName="sliderbttn" dataTipFormatFunction="formatPct" liveDragging="true" snapInterval="{ZoomInterval}" minimum="0.1" value="{Scale}" width="120" height="15" enabled="true" toolTip="@Resource(key='Scale', bundle='FlexPaper')" tabIndex="6" />
		<st:GradientTextInput fontSize="9" height="21" width="40" id="txtPct" text="{formatPct(Scale)}" keyDown="txtPctKeyDown(event)" enabled="{paper1.ViewMode == ViewModeEnum.PORTRAIT}" toolTip="@Resource(key='Scale', bundle='FlexPaper')" tabIndex="7" />
		<st:GradientImageButton icon="@Embed('/../assets/fullscreen.gif')" styleName="toolbttn" toolTip="@Resource(key='Fullscreen', bundle='FlexPaper')"  width="20" height="20" x="312" y="2" click="toggleFullScreen();" tabIndex="8" />
		<mx:Image source="@Embed('/../assets/bar.gif')" width="3" height="21"  />
		
		<st:GradientImageButton icon="@Embed('/../assets/icon-arrow-left.gif')" styleName="toolbttn" toolTip="@Resource(key='PreviousPage', bundle='FlexPaper')" width="15" height="20" click="mvPrev();" tabIndex="8" />
		<st:GradientTextInput fontSize="9" height="21" width="40" id="txtPage" text="{paper1.currPage}" keyDown="txtPageNumKeyDown(event)" enabled="{paper1.ViewMode == ViewModeEnum.PORTRAIT||paper1.ViewMode == ViewModeEnum.TWOPAGE}" toolTip="@Resource(key='Current Page', bundle='FlexPaper')" tabIndex="9"  />
		<mx:HBox horizontalGap="1" paddingTop="2" >
			<st:GradientLabel fontSize="9" height="21" width="10" text="/"/>
			<st:GradientLabel fontSize="9" height="21" width="33" text="{paper1.numPages}"/>
		</mx:HBox>
		<st:GradientImageButton icon="@Embed('/../assets/icon-arrow-right.gif')" styleName="toolbttn" toolTip="@Resource(key='NextPage', bundle='FlexPaper')"  width="15" height="20"  click="mvNext();" tabIndex="10" />
		<mx:Image source="@Embed('/../assets/bar.gif')" width="3" height="21" />
		
		<st:GradientImageButton icon="@Embed('/../assets/textselect.gif')" styleName="toolbttn" toolTip="@Resource(key='TextSelect', bundle='FlexPaper')"  width="20" selected="{paper1.TextSelectEnabled}" click="{paper1.TextSelectEnabled=true}" tabIndex="11" visible="{!ReadOnly}" includeInLayout="{!ReadOnly}" />
		<st:GradientImageButton icon="@Embed('/../assets/hand2.gif')" styleName="toolbttn" toolTip="@Resource(key='TextDrag', bundle='FlexPaper')"  width="22" selected="{!paper1.TextSelectEnabled}"  click="{paper1.TextSelectEnabled=false}" tabIndex="12" visible="{!ReadOnly}" includeInLayout="{!ReadOnly}" />
		<mx:Image source="@Embed('/../assets/bar.gif')" width="3" height="21" visible="{!ReadOnly}" includeInLayout="{!ReadOnly}" />
		
		<st:GradientTextInput fontSize="9" height="20" width="65" id="txtSearch" keyDown="txtSearchKeyDown(event)" enabled="{paper1.ViewMode == ViewModeEnum.PORTRAIT||paper1.ViewMode == ViewModeEnum.TWOPAGE}" toolTip="@Resource(key='Search', bundle='FlexPaper')" tabIndex="13" />
		<st:GradientImageButton icon="@Embed('/../assets/find.gif')" styleName="toolbttn" width="20" height="20" click="paper1.searchText(txtSearch.text);" toolTip="@Resource(key='Search', bundle='FlexPaper')" tabIndex="14" enabled="{!TrueFullScreenActive}" />
		<mx:Image source="@Embed('/../assets/bar.gif')" width="3" height="21" />
		
		<mx:Canvas width="100%" id="cnv_info" horizontalScrollPolicy="off" verticalScrollPolicy="off" height="100%">
			<st:GradientImageButton id="bttnInfo" left="{cnv_info.width-21}" visible="false" icon="@Embed('/../assets/logosmallgray.png')" styleName="toolbttn" width="20" height="20" click="showInfo(event);" toolTip="@Resource(key='About', bundle='FlexPaper')" />
			<st:GradientLabel id="lblProgress" left="{cnv_info.width-26}" textAlign="center" y="4" fontSize="8" height="19" width="32" text="" tabIndex="0"/>
			<ct:Spinner id="spin1" left="{cnv_info.width-22}" styleName="gradientlines" y="-1" startImmediately="false" spinnerType="gradientcircle" width="22" height="22"/>
		</mx:Canvas>
	</mx:HBox>
	<fp:Viewer id="paper1"	onDocumentLoaded="documentLoadedHandler(event)" 
			   onDocumentLoading="papersLoadingHandler(event)"
			   onDocumentLoadedError="documentLoadedErrorHandler(event)"
			   onLogoClicked="logoClickedEventHandler(event)"
			   
			   onNoMoreSearchResults="onNoMoreSearchResultsHandler(event)"
			   onLoadingProgress="onDocumentLoadingProgressHandler(event)"
			   onScaleChanged="onScaleChanged(event)"
			   onFitModeChanged="onFitModeChanged(event)"
			   onViewModeChanged="onViewModeChanged(event)"
			   onCurrPageChanged="onCurrPageChanged(event)"
			   onCursorModeChanged="onCursorModeChanged(event)"
			   onExternalLinkClicked="onExternalLinkClickedHandler(event)" 
			   onDocumentPrinted="documentPrintedHandler(event)"
			   
			   SwfFile="{SwfFile}" 
			   Scale="{Scale}" 
			   ZoomTransition="{ZoomTransition}" 
			   ZoomTime="{ZoomTime}"
			   FitPageOnLoad="{FitPageOnLoad}"
			   FitWidthOnLoad="{FitWidthOnLoad}"
			   ProgressiveLoading="{ProgressiveLoading}"
			   ZoomInterval="{ZoomInterval}"
			   addedToStage="MacMouseWheelHandler.init(stage)" 
			   height="100%" width="100%" borderStyle="solid"  tabIndex="0" />							
</fp:FlexPaperViewer_Base>
