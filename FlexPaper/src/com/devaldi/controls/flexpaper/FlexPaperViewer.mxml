<?xml version="1.0" encoding="utf-8"?>
<!--
	Copyright 2009 Erik EngstrÃ¶m

    This file is part of FlexPaper.

    FlexPaper is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    FlexPaper is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with FlexPaper.  If not, see <http://www.gnu.org/licenses/>.	
-->
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%" verticalGap="0"  xmlns:fp="com.devaldi.controls.flexpaper.*" xmlns:ct="com.devaldi.controls.*" xmlns:st="com.devaldi.skinning.*" borderColor="#8a8a8a" borderThickness="1">
<mx:Script>
	<![CDATA[
		import mx.events.SliderEvent;
        import mx.controls.sliderClasses.Slider;
		import mx.controls.Alert;
		import mx.managers.PopUpManager;
		import flash.display.StageDisplayState;
		
		[Bindable]
		public var Scale:Number = 1;
		
		[Bindable]
		public var SwfFile:String = "";
		
		[Bindable]
		public var ZoomTransition:String = "easeOut";
		
		[Bindable]
		public var ZoomTime:Number = 0.6;
		
		[Bindable]
		public var ZoomInterval:Number = 0.1;
		
		private var prd:PrintRangeDialog;
			
		private function printPaper():void{
			prd = new PrintRangeDialog(); 
			PopUpManager.addPopUp(prd, this, true);
            PopUpManager.centerPopUp(prd);
            prd["bttnPrint"].addEventListener("click", printHandler); 
		}
		
		private function printHandler(event:Event):void{
			if(prd.PrintRange != "" && prd.validated){
				paper1.printPaperRange(prd.PrintRange);
			}else if(prd.validated){
				paper1.printPaper();
			}
		}
		
		private function onNoMoreSearchResultsHandler(event:Event):void{
			Alert.show("Finished searching the document. No more matches were found.","Search finished.",mx.controls.Alert.OK,this);
		}
		
		private function papersLoadedHandler(event:Event):void{
			spin1.visible = false;
			lblProgress.visible = false;
			spin1.stop();
			bttnInfo.visible = true;
		}
		
		private function papersLoadingHandler(event:Event):void{
			spin1.start();
			spin1.visible = true;
		}
		
		private function sliderChange(event:SliderEvent):void {
                var currentSlider:Slider=Slider(event.currentTarget);
                paper1.Zoom(currentSlider.value);
        }		
        
 		private function formatPct(item:Object):String {
 			var spct:String = (Math.round(Number(item)*100)) + "%";
 			txtPct.text = spct;
            return spct;
   		}
   		
   		private function txtPctKeyDown(event:KeyboardEvent):void{
   			if(event.keyCode == Keyboard.ENTER && txtPct.text.length>1 && !isNaN(Number(txtPct.text.replace("%","")))){
   				paper1.Zoom(new Number(txtPct.text.replace("%",""))/100);
   			}
   		}
   		
   		private function txtSearchKeyDown(event:KeyboardEvent):void{
   			if(event!=null && event.keyCode == Keyboard.ENTER && txtSearch.text.length>0){
   				paper1.searchText(txtSearch.text);
   			}
   		}
   		
   		private function txtPageNumKeyDown(event:KeyboardEvent):void{
   			if(event.keyCode == Keyboard.ENTER && txtPage.text.length>0 && !isNaN(Number(txtPage.text))){
   				paper1.gotoPage(new Number(txtPage.text));
   			}
   		}
   		
   		private function onDocumentLoadingProgressHandler(event:ProgressEvent):void{
			lblProgress.text = String(Math.round(event.bytesLoaded/event.bytesTotal*100));			
   		}
   		
   		private function onScaleChanged(event:Event):void{
   			txtPct.text = formatPct(paper1.Scale);
   			slidPctScale.value = Number(paper1.Scale);
   		}
   		
		private function showInfo():void {
			var vabout:About = new About();
			PopUpManager.addPopUp(vabout, this, true);
            PopUpManager.centerPopUp(vabout);
        }

		private function mvNext():void{
			if(paper1.currPage<paper1.numPages){paper1.gotoPage(paper1.currPage+1);}
		}
		
		private function mvPrev():void{
			if(paper1.currPage>1){paper1.gotoPage(paper1.currPage-1);}			
		}
		
		private function toggleFullScreen():void {
            try {
                switch (this.stage.displayState) {
                    case StageDisplayState.FULL_SCREEN:
                        this.stage.displayState = StageDisplayState.NORMAL;
                        break;
                    default:
                        this.stage.displayState = StageDisplayState.FULL_SCREEN;
                        break;
                }
            } catch (err:SecurityError) {
                // ignore
                
            }
        }
        
        public function fitWidth():void{
        	paper1.fitWidth();
        }
        
		public function fitHeight():void{
        	paper1.fitWidth();
        }		
	]]>
</mx:Script>
<mx:Style source="styles/default.css" />
	<mx:Canvas styleName="toolbarBackground" width="{paper1.width}" height="26" borderStyle="solid" verticalScrollPolicy="off" horizontalScrollPolicy="off">
		<st:GradientImageButton top="3" icon="@Embed('/../assets/print-icon.gif')" styleName="toolbttn" width="20" click="printPaper()" toolTip="Print" />
		<mx:Image source="@Embed('/../assets/bar.gif')" width="3" height="21" x="22" y="1" />
		<st:GradientImageButton top="2" left="28" icon="@Embed('/../assets/fit.gif')" styleName="toolbttn" width="20" click="paper1.fitWidth()" enabled="{paper1.ViewMode == 'Portrait'}" toolTip="Fit Width"  tabIndex="1"/>
		<st:GradientImageButton top="2" left="51" icon="@Embed('/../assets/pagefit.gif')" styleName="toolbttn" width="20"  click="paper1.fitHeight()" enabled="{paper1.ViewMode == 'Portrait'}" toolTip="Fit Page"  tabIndex="2"/>
		<st:GradientHSlider id="slidPctScale" x="99" y="1" maximum="5" change="sliderChange(event)" styleName="sliderbttn" dataTipFormatFunction="formatPct" liveDragging="true" snapInterval="{ZoomInterval}" minimum="0.1" value="{Scale}" width="120" enabled="{paper1.ViewMode == 'Portrait'}" toolTip="Scale"  tabIndex="4"/>
		<st:GradientTextInput x="220" y="1" fontSize="9" height="21" width="40" id="txtPct" text="{formatPct(Scale)}" keyDown="txtPctKeyDown(event)" enabled="{paper1.ViewMode == 'Portrait'}" toolTip="Scale" tabIndex="5"/>		
		<st:GradientImageButton top="2" x="73" icon="@Embed('/../assets/thumbs.gif')" styleName="toolbttn" width="20" click="paper1.switchMode()" toolTip="Thumb View"   tabIndex="3"/>
		<st:GradientTextInput x="315" y="1" fontSize="9" height="21" width="30" id="txtPage" text="{paper1.currPage}" keyDown="txtPageNumKeyDown(event)" enabled="{paper1.ViewMode == 'Portrait'}" toolTip="Current Page" tabIndex="8"/>
		<st:GradientLabel x="348" y="3" fontSize="9" height="17" width="10" text="/"/>
		<st:GradientLabel x="357" y="3" fontSize="9" height="19" width="28" text="{paper1.numPages}"/>
		<st:GradientImageButton top="3" x="478" icon="@Embed('/../assets/find.gif')" styleName="toolbttn" width="20" click="paper1.searchText(txtSearch.text);" toolTip="Search"   tabIndex="11"/>
		<st:GradientLabel id="lblProgress" x="{paper1.width-31}" textAlign="center" y="5" fontSize="8" height="19" width="32" text="" tabIndex="0"/>
		<mx:Image source="@Embed('/../assets/bar.gif')" width="3" height="21" x="95" y="1" />
		<mx:Image source="@Embed('/../assets/bar.gif')" width="3" height="21" x="288" y="1" />
		<mx:Image source="@Embed('/../assets/bar.gif')" width="3" height="21" x="404" y="1" />
		<mx:Image source="@Embed('/../assets/bar.gif')" width="3" height="21" x="500" y="1" />
		<st:GradientTextInput x="412" y="1" fontSize="9" height="21" width="65" id="txtSearch" keyDown="txtSearchKeyDown(event)" enabled="{paper1.ViewMode == 'Portrait'}" toolTip="Search" tabIndex="10"/>
		<st:GradientImageButton icon="@Embed('/../assets/icon-arrow-right.gif')" styleName="toolbttn" toolTip="Next Page"  width="20" height="20"  x="381" y="2" click="mvNext();"   tabIndex="9"/>
		<st:GradientImageButton icon="@Embed('/../assets/icon-arrow-left.gif')" styleName="toolbttn" toolTip="Previous Page"  width="20" height="20"  x="293" y="2" click="mvPrev();"   tabIndex="7"/>
		<st:GradientImageButton icon="@Embed('/../assets/fullscreen.gif')" styleName="toolbttn" toolTip="Fullscreen"  width="20" height="20"  x="264" y="2" click="toggleFullScreen();"   tabIndex="6"/>
		
		<ct:Spinner styleName="gradientlines" startImmediately="false" id="spin1" spinnerType="gradientcircle" left="{paper1.width-27}" top="1" width="22" height="22"/>
		<st:GradientImageButton id="bttnInfo" top="1" left="{paper1.width-27}" visible="false" icon="@Embed('/../assets/logosmallgray.png')" styleName="toolbttn" width="22" height="22" click="showInfo();" toolTip="About" />
	</mx:Canvas> 
	<fp:Viewer id="paper1"	onPapersLoaded="papersLoadedHandler(event)" 
							onPapersLoading="papersLoadingHandler(event)" 
							onNoMoreSearchResults="onNoMoreSearchResultsHandler(event)"
							onLoadingProgress="onDocumentLoadingProgressHandler(event)"
							onScaleChanged="onScaleChanged(event)"
							SwfFile="{SwfFile}" Scale="{Scale}" ZoomTransition="{ZoomTransition}" ZoomTime="{ZoomTime}"
							height="100%" width="100%" borderStyle="solid"  tabIndex="0"/>
</mx:VBox>
